{"ast":null,"code":"import { combineReducer } from 'redux';\n\nvar songReducer = function songReducer() {\n  return [{\n    title: 'I want it that way',\n    duration: '4:20'\n  }, {\n    title: 'New Divide',\n    duration: '3:55'\n  }, {\n    title: 'I know it',\n    duration: '5:22'\n  }, {\n    title: 'Summer 69',\n    duration: '3:41'\n  }];\n};\n\nvar selectedSongReducer = function selectedSongReducer() {\n  var selectedSong = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'SONG_SELECTED') {\n    return action.payload;\n  }\n\n  return selectedSong;\n};\n\nexport default combineReducer({\n  song: songReducer,\n  selectedSong: selectedSongReducer\n});","map":{"version":3,"sources":["/home/aakash/Documents/Aakash/Learn/React-js/songs/src/reducers/index.js"],"names":["combineReducer","songReducer","title","duration","selectedSongReducer","selectedSong","action","type","payload","song"],"mappings":"AAAA,SAASA,cAAT,QAA+B,OAA/B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,SAAO,CACH;AAAEC,IAAAA,KAAK,EAAG,oBAAV;AAAgCC,IAAAA,QAAQ,EAAI;AAA5C,GADG,EAEH;AAAED,IAAAA,KAAK,EAAG,YAAV;AAAwBC,IAAAA,QAAQ,EAAG;AAAnC,GAFG,EAGH;AAAED,IAAAA,KAAK,EAAG,WAAV;AAAuBC,IAAAA,QAAQ,EAAG;AAAlC,GAHG,EAIH;AAAED,IAAAA,KAAK,EAAG,WAAV;AAAuBC,IAAAA,QAAQ,EAAG;AAAlC,GAJG,CAAP;AAMH,CAPD;;AASA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAiC;AAAA,MAAhCC,YAAgC,uEAAjB,IAAiB;AAAA,MAAXC,MAAW;;AACzD,MAAGA,MAAM,CAACC,IAAP,KAAgB,eAAnB,EAAoC;AAChC,WAAOD,MAAM,CAACE,OAAd;AACH;;AACD,SAAOH,YAAP;AACH,CALD;;AAOA,eAAeL,cAAc,CAAC;AAC1BS,EAAAA,IAAI,EAAGR,WADmB;AAE1BI,EAAAA,YAAY,EAAGD;AAFW,CAAD,CAA7B","sourcesContent":["import { combineReducer } from 'redux';\n\nconst songReducer = () => {\n    return [\n        { title : 'I want it that way', duration :  '4:20' },\n        { title : 'New Divide', duration : '3:55' },\n        { title : 'I know it', duration : '5:22' },\n        { title : 'Summer 69', duration : '3:41' }\n    ];\n};\n\nconst selectedSongReducer = (selectedSong = null, action) => {\n    if(action.type === 'SONG_SELECTED') {\n        return action.payload;\n    }\n    return selectedSong;\n};\n\nexport default combineReducer({\n    song : songReducer,\n    selectedSong : selectedSongReducer\n})"]},"metadata":{},"sourceType":"module"}